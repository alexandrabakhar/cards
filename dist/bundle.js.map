{"version":3,"file":"bundle.js","mappings":"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,SAASC,cAAc,mBAAW,SAAE+D,OAAOzB,KAAKG,SACpD,CAEAuB,aACS1B,KAAKG,SAGVH,KAAKG,QAAQP,QACjB,EChGG,MCFM+B,EAA2B,CACpC,CACIhC,GAAI,EACJiC,KAAM,OACNC,IAAK,sBAET,CACIlC,GAAI,EACJiC,KAAM,eACNC,IAAK,qCAET,CACIlC,GAAI,EACJiC,KAAM,gBACNC,IAAK,sCAET,CACIlC,GAAI,EACJiC,KAAM,iBACNC,IAAK,uCAET,CACIlC,GAAI,EACJiC,KAAM,gBACNC,IAAK,sCAET,CACIlC,GAAI,EACJiC,KAAM,eACNC,IAAK,qCAET,CACIlC,GAAI,EACJiC,KAAM,gBACNC,IAAK,sCAET,CACIlC,GAAI,EACJiC,KAAM,iBACNC,IAAK,uCAET,CACIlC,GAAI,EACJiC,KAAM,iBACNC,IAAK,uCAET,CACIlC,GAAI,EACJiC,KAAM,eACNC,IAAK,qCAET,CACIlC,GAAI,GACJiC,KAAM,kBACNC,IAAK,wCAET,CACIlC,GAAI,GACJiC,KAAM,mBACNC,IAAK,yCAET,CACIlC,GAAI,GACJiC,KAAM,oBACNC,IAAK,0CAET,CACIlC,GAAI,GACJiC,KAAM,mBACNC,IAAK,yCAET,CACIlC,GAAI,GACJiC,KAAM,kBACNC,IAAK,wCAET,CACIlC,GAAI,GACJiC,KAAM,mBACNC,IAAK,yCAET,CACIlC,GAAI,GACJiC,KAAM,oBACNC,IAAK,0CAET,CACIlC,GAAI,GACJiC,KAAM,oBACNC,IAAK,0CAET,CACIlC,GAAI,GACJiC,KAAM,kBACNC,IAAK,wCAET,CACIlC,GAAI,GACJiC,KAAM,gBACNC,IAAK,sCAET,CACIlC,GAAI,GACJiC,KAAM,iBACNC,IAAK,uCAET,CACIlC,GAAI,GACJiC,KAAM,kBACNC,IAAK,wCAET,CACIlC,GAAI,GACJiC,KAAM,iBACNC,IAAK,uCAET,CACIlC,GAAI,GACJiC,KAAM,gBACNC,IAAK,sCAET,CACIlC,GAAI,GACJiC,KAAM,iBACNC,IAAK,uCAET,CACIlC,GAAI,GACJiC,KAAM,kBACNC,IAAK,wCAET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","sources":["webpack://fourth/./src/TS/stopwatch.ts","webpack://fourth/./src/TS/checkUserAnswer.ts","webpack://fourth/./src/TS/events.ts","webpack://fourth/./src/TS/modal.ts","webpack://fourth/./src/TS/screens.ts","webpack://fourth/./src/TS/CARDS.ts","webpack://fourth/./src/TS/shuffleCardsArray.ts","webpack://fourth/./src/TS/createCardsArray.ts","webpack://fourth/./src/TS/randomizer.ts","webpack://fourth/./src/TS/app.ts","webpack://fourth/./src/TS/blocks.ts","webpack://fourth/./src/TS/createCardsArrayByLevel.ts"],"sourcesContent":["export const stopwatch = () => {\n    const clock = document.querySelector('.game__clock') as HTMLElement;\n    let sec = 0;\n    let min = 0;\n\n    function tick() {\n        sec++;\n\n        if (sec >= 60) {\n            sec = 0;\n            min++;\n            if (min >= 60) {\n                min = 0;\n                return;\n            }\n        }\n    }\n\n    function add() {\n        tick();\n        clock.textContent =\n            (min > 9 ? min : '0' + min) + ':' + (sec > 9 ? sec : '0' + sec);\n    }\n\n    function timer() {\n        const setStopwatchInterval = setInterval(() => {\n            add();\n            console.log(1);\n        }, 1000);\n        window.application.timers.push(setStopwatchInterval);\n    }\n    timer();\n};\n","export const checkUserAnswer = (answer: string) => {\n    const answersArray = window.application.answer;\n\n    answersArray.push(answer);\n    console.log(answersArray);\n    const length = answersArray.length;\n    if (answer !== answersArray[length - 2] && length % 2 === 0) {\n        const clock = document.querySelector('.game__clock') as HTMLElement;\n        const time = clock.textContent as string;\n        window.application.gameTime = time;\n        window.application.answer = [];\n        window.application.stopInterval();\n        window.application.renderScreen('loose');\n\n        return;\n    }\n    const level = window.application.level;\n\n    if (length === level * 6) {\n        const clock = document.querySelector('.game__clock') as HTMLElement;\n        const time = clock.textContent as string;\n        window.application.gameTime = time;\n        window.application.answer = [];\n        window.application.stopInterval();\n        window.application.renderScreen('win');\n\n        return;\n    }\n};\n","import { checkUserAnswer } from './checkUserAnswer';\nexport function selectGameLevel(event: Event) {\n    event.preventDefault();\n    const content = document.querySelector('.content') as HTMLFormElement;\n\n    const difficultyLevels = content.querySelector(\n        '.difficulty__levels'\n    ) as HTMLElement;\n\n    const selectedLevel = difficultyLevels.querySelector(\n        'input:checked'\n    ) as HTMLInputElement;\n    if (!selectedLevel) {\n        console.log('Выберите уровень!');\n        return;\n    }\n    window.application.level = Number(selectedLevel.value);\n    content.textContent = '';\n\n    window.application.renderScreen('game');\n}\n\nexport function showCard(event: Event): void {\n    const target = event.target as HTMLElement;\n    if (!target.classList.contains('card')) {\n        return;\n    }\n    checkUserAnswer(target.id);\n    target.classList.remove('back');\n}\n","export class Modal {\n    classes?: string[];\n    modal?: HTMLElement;\n    modalTitle?: HTMLElement;\n    modalBtn?: HTMLElement;\n    wrapper?: HTMLElement;\n    modalText?: HTMLElement;\n    time?: HTMLElement;\n    modalImg?: HTMLElement;\n    gameStatus: string;\n    constructor(gameStatus: string) {\n        this.gameStatus = gameStatus;\n    }\n\n    buildModal(title: string) {\n        this.wrapper = this.createDomNode('div', 'modal__wrapper');\n\n        this.modal = this.createDomNode('div', 'modal__content');\n\n        this.modalTitle = this.createDomNode('h2', 'modal__title');\n        this.modalTitle.textContent = title;\n\n        this.modalText = this.createDomNode('p', 'modal__text');\n        this.modalText.textContent = 'Затраченное время:';\n        this.time = this.createDomNode('h1', 'modal__time');\n        this.time.textContent = window.application.gameTime;\n        this.classes = ['btn', 'modal__btn'];\n        this.modalBtn = this.createDomNode('button', this.classes);\n        this.modalBtn.textContent = 'Играть снова';\n        this.buildImg(this.gameStatus);\n        this.bindEvents();\n        this.appendsModalElements();\n    }\n\n    buildImg(status: string) {\n        this.modalImg = this.createDomNode('img', 'modal__img');\n        if (status === 'win') {\n            this.modalImg.setAttribute('src', '../static/images/win.png');\n            this.modalImg.setAttribute('alt', 'WIN');\n            return;\n        }\n        if (status === 'loose') {\n            this.modalImg.setAttribute('src', '../static/images/loose.png');\n            this.modalImg.setAttribute('alt', 'LOOSE');\n            return;\n        }\n    }\n    createDomNode(elemHTML: string, classes: string | string[]) {\n        const node = document.createElement(elemHTML);\n        if (classes) {\n            if (Array.isArray(classes)) {\n                node.classList.add(...classes);\n                return node;\n            }\n            node.classList.add(classes);\n        }\n\n        return node;\n    }\n\n    appendsModalElements() {\n        if (\n            !this.wrapper ||\n            !this.modal ||\n            !this.modal ||\n            !this.modal ||\n            !this.modal ||\n            !this.modal\n        ) {\n            return;\n        }\n        this.wrapper.appendChild(this.modal);\n        this.modal.appendChild(this.modalImg as HTMLElement);\n        this.modal.appendChild(this.modalTitle as HTMLElement);\n        this.modal.appendChild(this.modalText as HTMLElement);\n        this.modal.appendChild(this.time as HTMLElement);\n        this.modal.appendChild(this.modalBtn as HTMLElement);\n    }\n\n    bindEvents() {\n        if (!this.modalBtn) {\n            return;\n        }\n        this.modalBtn.addEventListener('click', (event) => {\n            event.preventDefault();\n            window.application.renderScreen('difficulty');\n        });\n    }\n    openModal() {\n        if (!this.wrapper) {\n            return;\n        }\n        document.querySelector('.content')?.append(this.wrapper);\n    }\n\n    closeModal() {\n        if (!this.wrapper) {\n            return;\n        }\n        this.wrapper.remove();\n    }\n}\n","import { stopwatch } from './stopwatch';\nimport { selectGameLevel, showCard } from './events';\nimport { Modal } from './modal';\n\nexport const renderDifficultyScreen = () => {\n    const content = document.querySelector('.content') as HTMLDivElement;\n    content.textContent = '';\n    if (content.classList.contains('game__screen')) {\n        content.classList.remove('game__screen');\n    }\n\n    const form: HTMLFormElement = document.createElement('form');\n    form.classList.add('block__difficulty');\n    content?.appendChild(form);\n\n    form.addEventListener('submit', selectGameLevel);\n\n    window.application.renderBlock('difficulty-heading', form);\n\n    const div = document.createElement('div');\n    div.classList.add('difficulty__levels');\n    form.appendChild(div);\n\n    window.application.renderBlock('difficulty-levels-radio', div);\n    window.application.renderBlock('difficulty-btn', form);\n};\n\nexport const renderGameScreen = () => {\n    const content = document.querySelector('.content');\n\n    content?.classList.add('game__screen');\n\n    const header = document.createElement('header');\n    header.classList.add('game__header');\n    content?.appendChild(header);\n\n    window.application.renderBlock('game-clock', header);\n    window.application.renderBlock('game-btn', header);\n\n    const main = document.createElement('main');\n    window.application.renderBlock('cards', main);\n    content?.appendChild(main);\n    const hideCards = setInterval(() => {\n        const cards = Array.from(main.children);\n        for (const card of cards) {\n            card.classList.add('back');\n        }\n        console.log('5sec');\n        clearInterval(hideCards);\n        main.addEventListener('click', showCard);\n\n        stopwatch();\n    }, 5000);\n\n    window.application.timers.push(hideCards);\n};\n\nexport const renderWinScreen = () => {\n    const modal = new Modal('win');\n    modal.buildModal('Вы выиграли!');\n    modal.openModal();\n};\n\nexport const renderLooseScreen = () => {\n    const modal = new Modal('loose');\n    modal.buildModal('Вы проиграли!');\n    modal.openModal();\n};\n","import { cardsObject } from './abstractTypes';\n\nexport const ALL_CARDS: cardsObject[] = [\n    {\n        id: 0,\n        name: 'back',\n        img: '../static/back.png',\n    },\n    {\n        id: 1,\n        name: 'ace-of-clubs',\n        img: '../static/images/ace-of-clubs.png',\n    },\n    {\n        id: 2,\n        name: 'king-of-clubs',\n        img: '../static/images/king-of-clubs.png',\n    },\n    {\n        id: 3,\n        name: 'queen-of-clubs',\n        img: '../static/images/queen-of-clubs.png',\n    },\n    {\n        id: 4,\n        name: 'jack-of-clubs',\n        img: '../static/images/jack-of-clubs.png',\n    },\n    {\n        id: 5,\n        name: 'ten-of-clubs',\n        img: '../static/images/ten-of-clubs.png',\n    },\n    {\n        id: 6,\n        name: 'nine-of-clubs',\n        img: '../static/images/nine-of-clubs.png',\n    },\n    {\n        id: 7,\n        name: 'eight-of-clubs',\n        img: '../static/images/eight-of-clubs.png',\n    },\n    {\n        id: 8,\n        name: 'seven-of-clubs',\n        img: '../static/images/seven-of-clubs.png',\n    },\n    {\n        id: 9,\n        name: 'six-of-clubs',\n        img: '../static/images/six-of-clubs.png',\n    },\n    {\n        id: 10,\n        name: 'ace-of-diamonds',\n        img: '../static/images/ace-of-diamonds.png',\n    },\n    {\n        id: 11,\n        name: 'king-of-diamonds',\n        img: '../static/images/king-of-diamonds.png',\n    },\n    {\n        id: 12,\n        name: 'queen-of-diamonds',\n        img: '../static/images/queen-of-diamonds.png',\n    },\n    {\n        id: 13,\n        name: 'jack-of-diamonds',\n        img: '../static/images/jack-of-diamonds.png',\n    },\n    {\n        id: 14,\n        name: 'ten-of-diamonds',\n        img: '../static/images/ten-of-diamonds.png',\n    },\n    {\n        id: 15,\n        name: 'nine-of-diamonds',\n        img: '../static/images/nine-of-diamonds.png',\n    },\n    {\n        id: 16,\n        name: 'eight-of-diamonds',\n        img: '../static/images/eight-of-diamonds.png',\n    },\n    {\n        id: 17,\n        name: 'seven-of-diamonds',\n        img: '../static/images/seven-of-diamonds.png',\n    },\n    {\n        id: 18,\n        name: 'six-of-diamonds',\n        img: '../static/images/six-of-diamonds.png',\n    },\n    {\n        id: 19,\n        name: 'ace-of-hearts',\n        img: '../static/images/ace-of-hearts.png',\n    },\n    {\n        id: 20,\n        name: 'king-of-hearts',\n        img: '../static/images/king-of-hearts.png',\n    },\n    {\n        id: 21,\n        name: 'queen-of-hearts',\n        img: '../static/images/queen-of-hearts.png',\n    },\n    {\n        id: 22,\n        name: 'jack-of-hearts',\n        img: '../static/images/jack-of-hearts.png',\n    },\n    {\n        id: 23,\n        name: 'ten-of-hearts',\n        img: '../static/images/ten-of-hearts.png',\n    },\n    {\n        id: 24,\n        name: 'nine-of-hearts',\n        img: '../static/images/nine-of-hearts.png',\n    },\n    {\n        id: 25,\n        name: 'eight-of-hearts',\n        img: '../static/images/eight-of-hearts.png',\n    },\n    {\n        id: 26,\n        name: 'seven-of-hearts',\n        img: '../static/images/seven-of-hearts.png',\n    },\n    {\n        id: 27,\n        name: 'six-of-hearts',\n        img: '../static/images/six-of-hearts.png',\n    },\n    {\n        id: 28,\n        name: 'ace-of-spades',\n        img: '../static/images/ace-of-spades.png',\n    },\n    {\n        id: 29,\n        name: 'king-of-spades',\n        img: '../static/images/king-of-spades.png',\n    },\n    {\n        id: 30,\n        name: 'queen-of-spades',\n        img: '../static/images/queen-of-spades.png',\n    },\n    {\n        id: 31,\n        name: 'jack-of-spades',\n        img: '../static/images/jack-of-spades.png',\n    },\n    {\n        id: 32,\n        name: 'ten-of-spades',\n        img: '../static/images/ten-of-spades.png',\n    },\n    {\n        id: 33,\n        name: 'nine-of-spades',\n        img: '../static/images/nine-of-spades.png',\n    },\n    {\n        id: 34,\n        name: 'eight-of-spades',\n        img: '../static/images/eight-of-spades.png',\n    },\n    {\n        id: 35,\n        name: 'seven-of-spades',\n        img: '../static/images/seven-of-spades.png',\n    },\n    {\n        id: 36,\n        name: 'six-of-spades',\n        img: '../static/images/six-of-spades.png',\n    },\n];\n","import { createCardsArray } from './createCardsArray';\nimport { cardsObject } from './abstractTypes';\n\nexport const shuffleCardsArray = (cardsAmount: number): cardsObject[] => {\n    const unshuffledArray: cardsObject[] = createCardsArray(cardsAmount);\n\n    const shuffledArray: cardsObject[] = unshuffledArray\n        .map((value) => ({ value, sort: Math.random() }))\n        .sort((a, b) => a.sort - b.sort)\n        .map(({ value }) => value);\n    return shuffledArray;\n};\n","import { ALL_CARDS } from './CARDS';\nimport { randomizer } from './randomizer';\nimport { cardsObject } from './abstractTypes';\n\nexport const createCardsArray = (cardsAmount: number) => {\n    const cardsArray: cardsObject[] = [];\n    const numbersArray: number[] = [];\n\n    for (let i = 0; i < cardsAmount; i++) {\n        const randomNumber: number = randomizer();\n\n        if (numbersArray.includes(randomNumber)) {\n            console.log('the same number');\n\n            i = i - 1;\n        } else {\n            numbersArray.push(randomNumber);\n\n            const randomCard: cardsObject = ALL_CARDS[randomNumber];\n            cardsArray.push(randomCard);\n            cardsArray.push(randomCard);\n        }\n    }\n\n    return cardsArray;\n};\n","export const randomizer = (): number => {\n    const randomNumber: number = Math.floor(Math.random() * 36 + 1);\n\n    return randomNumber;\n};\n","import '../styles/style.css';\nimport {\n    renderDifficultyScreen,\n    renderGameScreen,\n    renderLooseScreen,\n    renderWinScreen,\n} from './screens';\nimport {\n    renderDifficultyHeading,\n    renderDifficultyLevelsRadio,\n    renderDifficultyBtn,\n    renderGameClock,\n    renderGameBtn,\n    renderCards,\n} from './blocks';\nimport { Application } from './abstractTypes';\ndeclare global {\n    interface Window {\n        application: Application;\n    }\n}\nwindow.application = {\n    answer: [],\n    level: 0,\n    gameTime: '',\n    gameStatus: {},\n    timers: [],\n    blocks: {\n        'difficulty-heading': renderDifficultyHeading,\n        'difficulty-levels-radio': renderDifficultyLevelsRadio,\n        'difficulty-btn': renderDifficultyBtn,\n        'game-clock': renderGameClock,\n        'game-btn': renderGameBtn,\n        cards: renderCards,\n    },\n    screens: {\n        difficulty: renderDifficultyScreen,\n        game: renderGameScreen,\n        win: renderWinScreen,\n        loose: renderLooseScreen,\n    },\n    renderBlock: function (blockName: string, container: HTMLElement) {\n        if (!this.blocks[blockName]) {\n            console.log(`Такого поля '${blockName}' нет!`);\n            return;\n        }\n        this.blocks[blockName](container);\n    },\n    renderScreen: function (screenName: string) {\n        this.timers.forEach((timer: NodeJS.Timer) => {\n            clearInterval(timer);\n        });\n\n        this.timers = [];\n\n        if (!this.screens[screenName]) {\n            console.log(`Такого поля '${screenName}' нет!`);\n            return;\n        }\n        this.screens[screenName]();\n    },\n    stopInterval: function (): void {\n        this.timers.forEach((timer: NodeJS.Timer) => {\n            clearInterval(timer);\n        });\n    },\n};\n\nwindow.application.renderScreen('difficulty');\n","import { createCardsArrayByLevel } from './createCardsArrayByLevel';\nimport { cardsObject } from './abstractTypes';\n\nexport function renderDifficultyHeading(container: HTMLElement) {\n    const heading: HTMLHeadingElement = document.createElement('h2');\n    heading.classList.add('difficulty__heading');\n    heading.textContent = 'Выбери сложность';\n    container.appendChild(heading);\n}\n\nexport function renderDifficultyLevelsRadio(container: HTMLElement) {\n    for (let i = 1; i <= 3; i++) {\n        const input: HTMLInputElement = document.createElement('input');\n        input.setAttribute('id', `level${i}`);\n        input.setAttribute('value', `${i}`);\n        input.setAttribute('name', `levels`);\n        input.setAttribute('type', `radio`);\n        input.classList.add('difficulty__levels-radio');\n        container.appendChild(input);\n\n        const label = document.createElement('label');\n        label.setAttribute('for', `level${i}`);\n        label.textContent = `${i}`;\n        container.appendChild(label);\n    }\n}\n\nexport function renderDifficultyBtn(container: HTMLElement) {\n    const btn = document.createElement('button');\n    btn.classList.add('difficulty__btn', 'btn');\n    btn.textContent = 'Играть';\n    container.appendChild(btn);\n}\n\nexport function renderGameClock(container: HTMLElement) {\n    const box = document.createElement('div');\n    box.classList.add('game__clock-container');\n\n    const div = document.createElement('div');\n    div.classList.add('game__clock-text');\n\n    const min = document.createElement('span');\n    min.textContent = 'min';\n\n    const sek = document.createElement('span');\n    sek.textContent = 'sek';\n    const clock = document.createElement('h1');\n    clock.textContent = '00.00';\n    clock.classList.add('game__clock');\n\n    div.appendChild(min);\n    div.appendChild(sek);\n    box.appendChild(div);\n    box.appendChild(clock);\n\n    container.appendChild(box);\n}\n\nexport function renderGameBtn(container: HTMLElement) {\n    const btn = document.createElement('button');\n    btn.classList.add('game__btn', 'btn');\n    btn.textContent = 'Начать заново';\n    container.appendChild(btn);\n    btn.addEventListener('click', (event) => {\n        event.preventDefault();\n        window.application.renderScreen('difficulty');\n    });\n}\n\nexport function renderCards(container: HTMLElement) {\n    const cardsArray = createCardsArrayByLevel(\n        window.application.level\n    ) as cardsObject[];\n\n    for (let i = 0; i < cardsArray.length; i++) {\n        const card = cardsArray[i];\n        const img: HTMLImageElement = document.createElement('img');\n        img.setAttribute('src', `${card.img}`);\n        img.setAttribute('alt', `${card.name}`);\n        img.setAttribute('id', `${card.name}`);\n        img.classList.add('card');\n        container.appendChild(img);\n    }\n}\n","import { shuffleCardsArray } from './shuffleCardsArray';\nimport { cardsObject } from './abstractTypes';\n\nexport const createCardsArrayByLevel = (\n    difficultyLevel: number\n): cardsObject[] | undefined => {\n    if (difficultyLevel === 1) {\n        const cardsAmount = 3;\n        const shuffledCardsArray: cardsObject[] =\n            shuffleCardsArray(cardsAmount);\n        return shuffledCardsArray;\n    }\n    if (difficultyLevel === 2) {\n        const cardsAmount = 6;\n        const shuffledCardsArray: cardsObject[] =\n            shuffleCardsArray(cardsAmount);\n        return shuffledCardsArray;\n    }\n    if (difficultyLevel === 3) {\n        const cardsAmount = 9;\n        const shuffledCardsArray: cardsObject[] =\n            shuffleCardsArray(cardsAmount);\n        return shuffledCardsArray;\n    }\n};\n"],"names":["stopwatch","clock","document","querySelector","sec","min","setStopwatchInterval","setInterval","textContent","console","log","window","application","timers","push","timer","checkUserAnswer","answer","answersArray","length","time","gameTime","stopInterval","renderScreen","level","selectGameLevel","event","preventDefault","content","selectedLevel","Number","value","showCard","target","classList","contains","id","remove","Modal","constructor","gameStatus","this","buildModal","title","wrapper","createDomNode","modal","modalTitle","modalText","classes","modalBtn","buildImg","bindEvents","appendsModalElements","status","modalImg","setAttribute","elemHTML","node","createElement","Array","isArray","add","appendChild","addEventListener","openModal","append","closeModal","ALL_CARDS","name","img","shuffleCardsArray","cardsAmount","unshuffledArray","cardsArray","numbersArray","i","randomNumber","Math","floor","random","includes","randomCard","createCardsArray","map","sort","a","b","blocks","container","heading","input","label","btn","box","div","sek","cards","difficultyLevel","card","screens","difficulty","form","renderBlock","game","header","main","hideCards","from","children","clearInterval","win","loose","blockName","screenName","forEach"],"sourceRoot":""}